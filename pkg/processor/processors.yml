---

common_fields:
  field: &field
    name: field
    type: string
    required: true
    description: >-
      Source field to process.
  target_field: &target_field
    name: target_field
    type: string
    optional: true
    description: >-
      The field to assign the output value to, by default field is updated in-place.
  ignore_missing: &ignore_missing
    name: ignore_missing
    type: bool
    optional: true
    default: false
    description: >-
      If true and field does not exist or is null, the processor quietly returns
      without modifying the document.
  ignore_failure: &ignore_failure
    name: ignore_failure
    type: bool
    optional: true
    default: false
    description: >-
      Ignore failures for the processor.

processors:
  - append:
      description: >-
        Appends one or more values to an existing array if the field already
        exists and it is an array. Converts a scalar to an array and appends one
        or more values to it if the field exists and it is a scalar. Creates an
        array containing the provided values if the field doesn’t exist. Accepts
        a single value or an array of values.
      configuration:
        - <<: *ignore_missing
        - <<: *field
        - name: allow_duplicates
          type: bool
          optional: true
          default: false
          description: If false, the processor does not append values already present in the field.
        - name: value
          type: string
          description: The value to be appended.
  - lowercase:
      description: >-
        Lowercase converts a string to its lowercase equivalent. If the field is
        an array of strings, all members of the array will be converted.
      configuration:
        - <<: *ignore_missing
        - <<: *field
        - <<: *target_field
  - uppercase:
      description: >-
        Uppercase converts a string to its uppercase equivalent. If the field is
        an array of strings, all members of the array will be converted.
      configuration:
        - <<: *ignore_missing
        - <<: *field
        - <<: *target_field
  - community_id:
      description: |-
        Computes the Community ID for network flow data as defined in the
        [Community ID Specification](https://github.com/corelight/community-id-spec).
        You can use a community ID to correlate network events related to a single
        flow.

        The community ID processor reads network flow data from related
        Elastic Common Schema (ECS) fields by default. If you use the ECS, no
        configuration is required.
      configuration:
        - name: source_ip
          type: string
          optional: true
          default: source.ip
          description: Field containing the source IP address.
        - name: source_port
          type: string
          optional: true
          default: source.port
          description: Field containing the source port.
        - name: destination_ip
          type: string
          optional: true
          default: destination.ip
          description: Field containing the destination IP address.
        - name: destination_port
          type: string
          optional: true
          default: destination.port
          description: Field containing the destination port.
        - name: iana_number
          type: string
          optional: true
          default: network.iana_number
          description: Field containing the IANA number.
        - name: icmp_type
          type: string
          optional: true
          default: icmp.type
          description: Field containing the ICMP type.
        - name: icmp_code
          type: string
          optional: true
          default: icmp.code
          description: Field containing the ICMP code.
        - name: transport
          type: string
          optional: true
          default: network.transport
          description: >-
            Field containing the transport protocol. Used only when the
            iana_number field is not present.
        - name: seed
          type: int16
          optional: true
          default: 0
          description: |-
            Seed for the community ID hash. Must be between 0 and 65535
            (inclusive). The seed can prevent hash collisions between network
            domains, such as a staging and production network that use the same
            addressing scheme.
        - <<: *target_field
          default: network.community_id
        - <<: *ignore_failure
  - remove:
      description: |-
        Removes existing fields. If one field doesn’t exist the processor
        will fail.
      configuration:
        - <<: *field
          name: fields
          type: '[]string'
          description: Source fields to remove.
        - <<: *ignore_missing
  - set:
      description: |-
        Sets one field and associates it with the specified value. If the field
        already exists, its value will be replaced with the provided one.
      configuration:
        - name: value
          type: 'github.com/andrewkroh/go-sawmill/pkg/config.EventValue'
          optional: true
          description: The value to be set for the field.
        - name: copy_from
          type: string
          optional: true
          description: The origin field which will be copied to target_field.
        - <<: *target_field
        - <<: *ignore_missing
        - <<: *ignore_failure

