// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by processor/generate.go - DO NOT EDIT.
package webassembly

import (
	"github.com/andrewkroh/go-event-pipeline/pkg/processor"
	"github.com/andrewkroh/go-event-pipeline/pkg/processor/registry"
)

func init() {
	registry.MustRegister(processorName, New)
}

const (
	processorName = "webassembly"
)

// Config contains the configuration options for the webassembly processor.
type Config struct {
	// Path to the WebAssembly module to load. Binary (`.wasm`) and text
	// (`.wat`) formats are supported.
	File string `config:"file" validate:"required"`

	// Ignore failures for the processor.
	IgnoreFailure bool `config:"ignore_failure"`

	// A dictionary of parameters that are passed to module's `register`
	// function.
	Params map[string]interface{} `config:"params"`
}

// InitDefaults initializes the configuration options to their default values.
func (c *Config) InitDefaults() {
	c.IgnoreFailure = false
}

// Executes a WebAssembly module to process the event.
type Webassembly struct {
	config  Config
	session *wazeroSession
}

// New returns a new Webassembly processor.
func New(config Config) (*Webassembly, error) {
	return newProcessor(config)
}

// Config returns the Webassembly processor config.
func (p *Webassembly) Config() Config {
	return p.config
}

func (p *Webassembly) String() string {
	return processor.ConfigString(processorName, p.config)
}
