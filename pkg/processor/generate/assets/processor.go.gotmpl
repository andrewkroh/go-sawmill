{{.License}}

// Code generated by processor/generate.go - DO NOT EDIT.
package {{ .Name | to_lower }}

import (
{{ range $import := config_type_imports .Configuration }}
    "{{ $import }}"
{{- end }}
    "github.com/andrewkroh/go-event-pipeline/pkg/processor"
    "github.com/andrewkroh/go-event-pipeline/pkg/processor/registry"
)

func init() {
    registry.MustRegister(processorName, New)
}

const (
    processorName = "{{ .Name }}"
)

// Config contains the configuration options for the {{ .Name }} processor.
type Config struct {
{{- range $field := .Configuration}}
    // {{ description "\t" $field.Description}}
    {{$field.Name | to_exported_go_type}} {{trim_import $field.Type}} `config:"{{$field.Name}}"{{ if $field.Required }} validate:"required"{{ end }}`
{{ end -}}
}

// InitDefaults initializes the configuration options to their default values.
func (c *Config) InitDefaults() {
{{- range $field := .Configuration | select_defaults }}
    c.{{$field.Name | to_exported_go_type}} = {{$field.Default | quote_strings }}{{ end }}
}

// {{ description "" .Description }}
type {{.Name | to_exported_go_type }} struct {
    config Config
}

// New returns a new {{.Name | to_exported_go_type}} processor.
func New(config Config) (*{{.Name | to_exported_go_type}}, error) {
    return &{{.Name | to_exported_go_type}}{config: config}, nil
}

// Config returns the {{.Name | to_exported_go_type}} processor config.
func (p *{{.Name | to_exported_go_type}}) Config() Config {
    return p.config
}

func (p *{{.Name | to_exported_go_type}}) String() string {
    return processor.ConfigString(processorName, p.config)
}

{{ if .IncludeProcessFunc }}
func (p *{{.Name | to_exported_go_type}}) Process(event processor.Event) error {
    // TODO: Implement this in process.go.
    return nil
}
{{ end }}
